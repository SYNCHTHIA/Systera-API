image: alpine:latest
services:
  - docker:dind

variables:
  GOPATH: "/go"

stages:
  - build_app
  - build_image

build-app:
  stage: build_app
  artifacts:
    paths:
    - systera

  script:
  # Install Apps
  - apk --no-cache add git openssl

  # Install Golang
  - wget https://storage.googleapis.com/golang/go1.9.2.linux-amd64.tar.gz
  - echo "Extracting golang..." && tar -C /usr/local -xzf go1.9.2.linux-amd64.tar.gz
  - mkdir /lib64 && ln -s /lib/libc.musl-x86_64.so.1 /lib64/ld-linux-x86-64.so.2
  - export PATH=$PATH:/usr/local/go/bin
  - mkdir -p /go/src

  # Symlink
  - ln -s /builds /go/src/gitlab.com

  # Build
  - cd /go/src/gitlab.com/${CI_PROJECT_PATH}/cmd/systera
  - go get -v
  - cd /go/src/gitlab.com/${CI_PROJECT_PATH}
  - go build -o systera ./cmd/systera/main.go

build-java:
  stage: build_app
  image: maven:latest
  script:
  - mkdir -p /go/src && ln -s /builds /go/src/gitlab.com
  - cd /go/src/gitlab.com/${CI_PROJECT_PATH}/systerapb
  - if [ ! -e $HOME/.m2/ ]; then mkdir -p $HOME/.m2/; fi
  - echo -e ${CI_MVN_SETTINGS} > $HOME/.m2/settings.xml
  - mkdir -p ./java/src/main/proto/ && cp -Rfv ./*.proto ./java/src/main/proto/
  - cd java
  - mvn clean deploy

build-image:
  image: docker:latest
  stage: build_image
  script:
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
  - docker build -t registry.gitlab.com/startail/systera-api .
  - docker push registry.gitlab.com/startail/systera-api