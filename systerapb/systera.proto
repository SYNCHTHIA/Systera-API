syntax = "proto3";
package systerapb;

option java_package = "net.synchthia.api.systera";
option java_outer_classname = "SysteraProtos";

message Empty {}

/*
 * Systera API
 */
service Systera {
    rpc Announce(AnnounceRequest) returns (Empty) {}
    rpc Dispatch(DispatchRequest) returns (Empty) {}

    rpc InitPlayerProfile(InitPlayerProfileRequest) returns (InitPlayerProfileResponse) {}
    rpc FetchPlayerProfile(FetchPlayerProfileRequest) returns (FetchPlayerProfileResponse) {}
    rpc FetchPlayerProfileByName(FetchPlayerProfileByNameRequest) returns (FetchPlayerProfileResponse) {}

    rpc SetPlayerGroups(SetPlayerGroupsRequest) returns (Empty);
    rpc SetPlayerServer(SetPlayerServerRequest) returns (Empty);
    rpc RemovePlayerServer(RemovePlayerServerRequest) returns (Empty);
    rpc SetPlayerSettings(SetPlayerSettingsRequest) returns (Empty);

    rpc AltLookup(AltLookupRequest) returns (AltLookupResponse);

    rpc GetPlayerPunish(GetPlayerPunishRequest) returns (GetPlayerPunishResponse) {}
    rpc SetPlayerPunish(SetPlayerPunishRequest) returns (SetPlayerPunishResponse) {}

    rpc Report(ReportRequest) returns (ReportResponse) {}

    rpc FetchGroups(FetchGroupsRequest) returns (FetchGroupsResponse) {}

    rpc CreateGroup(CreateGroupRequest) returns (Empty) {}
    rpc RemoveGroup(RemoveGroupRequest) returns (Empty) {}

    rpc AddPermission(AddPermissionRequest) returns (Empty) {}
    rpc RemovePermission(RemovePermissionRequest) returns (Empty) {}
}

/*
 * Stream API
 */
message AnnounceRequest {
    string target = 1;
    string message = 2;
}
message DispatchRequest {
    string target = 1;
    string cmd = 2;
}

// ----------------
// STREAMING
// ----------------

// System
message SystemStream {
    enum Type {
        DISPATCH = 0;
        ANNOUNCE = 1;
    }
    Type type = 1;
    string msg = 2;
}

// Player
message PlayerStream {
    enum Type {
        ALL = 0;
        GROUPS = 1;
        SETTINGS = 2;
    }
    Type type = 1;
    PlayerEntry entry = 2;
}

// Punishment
message PunishmentStream {
    enum Type {
        PUNISH = 0;
        REPORT = 1;
    }
    Type type = 1;
    PunishEntry punish_entry = 2;
    ReportEntry report_entry = 3;
}

// Group
message GroupStream {
    enum Type {
        GROUP = 0;
        PERMISSIONS = 1;
    }
    Type type = 1;
    GroupEntry group_entry = 2;
}

/*
 * PLAYER PROFILE
 */
message PlayerData {
    string uuid = 1;
    string name = 2;
}
message PlayerStats {
    string current_server = 1;
    int64 first_login = 2;
    int64 last_login = 3;
}

message PlayerEntry {
    string player_uuid = 1;
    string player_name = 2;
    repeated string groups = 3;
    map<string, bool> settings = 4;
    PlayerStats stats = 5;
}

message InitPlayerProfileRequest {
    string player_uuid = 1;
    string player_name = 2;
    string ip_address = 3;
    string hostname = 4;
}
message InitPlayerProfileResponse {
    bool has_profile = 1;
}

message FetchPlayerProfileRequest {
    string player_uuid = 1;
}
message FetchPlayerProfileByNameRequest {
    string player_name = 1;
}
message FetchPlayerProfileResponse {
    PlayerEntry entry = 1;
}

message SetPlayerGroupsRequest {
    string player_uuid = 1;
    repeated string groups = 2;
}

message SetPlayerServerRequest {
    string player_uuid = 1;
    string server_name = 2;
}
message RemovePlayerServerRequest {
    string player_uuid = 1;
    string server_name = 2;
}

message SetPlayerSettingsRequest {
    string player_uuid = 1;
    string key = 2;
    bool value = 3;
}

/*
 * ALT LOOKUP
 */
message AddressesEntry {
    string address = 1;
    string hostname = 2;
    int64 first_seen = 3;
    int64 last_seen = 4;
}
message AltLookupEntry {
    string uuid = 1;
    string name = 2;
    repeated AddressesEntry addresses = 3;
}
message AltLookupRequest {
    string player_uuid = 1;
}
message AltLookupResponse {
    repeated AltLookupEntry entries = 1;
}

/*
 * PLAYER PUNISHMENTS
 */
enum PunishLevel {
    WARN = 0;
    KICK = 1;
    TEMPBAN = 2;
    PERMBAN = 3;
}

message PunishEntry {
    bool available = 1;

    PunishLevel level = 2;
    string reason = 3;

    int64 date = 4;
    int64 expire = 5;

    PlayerData punished_from = 6;
    PlayerData punished_to = 7;
}

message GetPlayerPunishRequest {
    string player_uuid = 1;
    PunishLevel filter_level = 2;
    bool include_expired = 3;
}
message GetPlayerPunishResponse {
    repeated PunishEntry entry = 1;
}

message SetPlayerPunishRequest {
    bool force = 1;
    PunishEntry entry = 2;
}
message SetPlayerPunishResponse {
    bool noprofile = 1;
    bool offline = 2;
    bool duplicate = 3;
    bool cooldown = 4;
}

message ReportEntry {
    PlayerData from = 1;
    PlayerData to = 2;
    string message = 3;
    int64 date = 4;
    string server = 5;
}
message ReportRequest {
    PlayerData from = 1;
    PlayerData to = 2;
    string message = 3;
}
message ReportResponse {}

/*
 * GROUP PERMISISONS
 */
message GroupEntry {
    string group_name = 1;
    string group_prefix = 2;
    repeated string global_perms = 3;
    repeated string server_perms = 4;
}
message PermissionsEntry {
    string server_name = 1;
    repeated string permissions = 2;
}

message FetchGroupsRequest {
    string server_name = 1;
}
message FetchGroupsResponse {
    repeated GroupEntry groups = 1;
}

message CreateGroupRequest {
    string group_name = 1;
    string group_prefix = 2;
    repeated PermissionsEntry perms_entry = 3;
}
// Empty//

message RemoveGroupRequest {
    string group_name = 1;
}
// Empty//

message AddPermissionRequest {
    string group_name = 1;
    string target = 2;
    repeated string permissions = 3;
}
// Empty//

message RemovePermissionRequest {
    string group_name = 1;
    string target = 2;
    repeated string permissions = 3;
}
